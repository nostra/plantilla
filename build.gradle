buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
        classpath 'org.ajoberstar:gradle-jacoco:0.1.0'
        classpath 'org.sonarqube.gradle:gradle-sonarqube-plugin:1.0'    }
}

plugins {
    id "org.sonarqube" version "1.0"
    id 'net.researchgate.release' version '2.2.2'
}

configurations {
    deployerJars
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'

if (!JavaVersion.current().java8Compatible) {
  throw new IllegalStateException("You need to compile this with java-8")
}

description = """Plantilla - example application setup"""

mainClassName = 'no.scienta.plantilla.PlantillaApplication'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

project.ext {
    dropwizardVersion = '0.8.4'
    jacksonVersion = '2.6.2'
    freemarkerVersion = '2.3.23'
    metricsVersion = '3.1.2'
}

dependencies {
    compile 'io.dropwizard.metrics:metrics-core:'+metricsVersion
    compile 'io.dropwizard.metrics:metrics-servlets:'+metricsVersion
    compile 'io.dropwizard.metrics:metrics-annotation:'+metricsVersion
    compile 'io.dropwizard.metrics:metrics-jetty9:'+metricsVersion
    compile 'io.dropwizard.metrics:metrics-jersey2:'+metricsVersion
    compile 'io.dropwizard.metrics:metrics-logback:'+metricsVersion
    compile 'io.dropwizard.metrics:metrics-graphite:'+metricsVersion
    compile 'org.freemarker:freemarker:'+freemarkerVersion
    compile 'io.dropwizard:dropwizard-core:'+dropwizardVersion
    compile 'io.dropwizard:dropwizard-views-freemarker:'+dropwizardVersion
    compile 'io.dropwizard:dropwizard-assets:'+dropwizardVersion
    compile 'io.dropwizard:dropwizard-forms:'+dropwizardVersion
    compile 'io.dropwizard:dropwizard-auth:'+dropwizardVersion
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:'+jacksonVersion
    compile 'com.fasterxml.jackson.core:jackson-annotations:'+jacksonVersion
    compile 'com.fasterxml.jackson.core:jackson-core:'+jacksonVersion
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:'+jacksonVersion
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-guava:'+jacksonVersion
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk7:'+jacksonVersion
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:'+jacksonVersion
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-base:'+jacksonVersion
    compile 'com.fasterxml.jackson.module:jackson-module-afterburner:'+jacksonVersion
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:'+jacksonVersion

    // Woodstock is recommended companion of jackson
    compile 'org.codehaus.woodstox:woodstox-core-asl:4.4.1'
    compile ('info.modprobe:browserid-verifier:0.2') {
        exclude group: 'org.slf4j'
    }
    compile group: 'ch.qos.logback', name: 'logback-classic', version:'1.1.3'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.12'
    testCompile 'junit:junit:4.12'
    testCompile 'io.dropwizard:dropwizard-testing:' + dropwizardVersion
    deployerJars "org.apache.maven.wagon:wagon-ssh-external:2.2"
}

shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

task wrapper(type: Wrapper) {
    // Gradle version 2.7 and below bombs on release
    gradleVersion = '2.8-rc-1'
}

// Release related
task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

afterReleaseBuild.dependsOn uploadArchives

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        // TODO Set username dynamic with ${user.name}
        // plantilla resolves due to configuration in: .ssh/config
        repository(url: "scpexe://plantilla:/usr/local/plantilla/releases") {
            authentication(userName: "root", privateKey: "/home/en/.ssh/digitalocean")
        }
    }
}
// /Release related

// Failing to get an actual report with this and git://github.com/harbur/docker-sonarqube.git
sonarqube{
    properties {
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.jdbc.url", "jdbc:postgresql://localhost:5432/sonar"
        property "sonar.jdbc.driverClassName", "org.postgresql.Driver"
        property "sonar.jdbc.username", "sonar"
        property "sonar.jdbc.password", "xaexohquaetiesoo"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    }
}
